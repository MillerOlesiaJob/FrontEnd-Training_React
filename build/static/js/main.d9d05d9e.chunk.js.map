{"version":3,"sources":["components/Caregories/Categories.js","store/actions.js","store/types.js","components/Button/Button.js","components/Answer/Answer.js","components/Question/Question.js","components/Popup/Popup.js","App.js","serviceWorker.js","store/reducers.js","store/rootReduser.js","index.js"],"names":["Categories","setDisabled","categoriesList","useSelector","state","categories","dispatch","useDispatch","handleChange","target","checked","id","type","payload","checkCategory","className","map","item","key","value","toLowerCase","onChange","htmlFor","Button","props","onClick","title","isDisabled","console","log","disabled","Answer","question","getAnswerBlock","answer","point","index","getAnswerTable","explan","getQuestion","links","link","href","getLinks","Question","questions","setQuestionsOver","useState","usedQuestions","setUsedQuestions","isShowQuestion","setShowQuestion","isShowAnswer","setShowAnswer","currentQuestion","setCurrentQuestion","isDisabledBtn","setDisabledBtn","isShowAnswerBtn","setAnswerShowBtn","handleEndQuiz","handleShowAnswer","showRandomQuestion","length","randomIndex","Math","floor","random","includes","prevState","text","Popup","onSubmit","onCancel","setShowPopup","App","dataBase","isStartClicked","setStartClicked","isShowPopup","isQuestionsOver","array","filter","category","forEach","questionsCategory","concat","getQuestions","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialCategoryState","initialQuestionBase","example","rootReducer","combineReducers","action","store","createStore","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d9d05d9e.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport './Categories.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {checkCategory, unCheckCategory} from \"../../store/actions\";\r\n\r\nconst Categories = ({setDisabled}) => {\r\n  const categoriesList = useSelector(state => state.categories);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({target}) => {\r\n    setDisabled(false);\r\n    !target.checked ? dispatch(unCheckCategory(target.id)) : dispatch(checkCategory(target.id));\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='categories-block'>\r\n        <h1 className='categories-block__title'>Categories</h1>\r\n        <ul className='categories-block__list'>\r\n          {categoriesList.map(item => (\r\n            <li key={item.id} className='categories-block__item categories-item'>\r\n              <input\r\n                type='checkbox'\r\n                id={item.value.toLowerCase()}\r\n                className='categories-item__check'\r\n                onChange={handleChange}\r\n                checked={item.checked}\r\n              />\r\n              <label htmlFor={item.value.toLowerCase()} className='categories-item__title'>{item.value}</label>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Categories;","import {CATEGORY_CHECK, CATEGORY_UNCHECK, CATEGORY_UNCHECK_ALL, QUESTIONS_SELECTED} from \"./types\";\r\n\r\nexport const checkCategory = (id) => {\r\n  return {\r\n    type: CATEGORY_CHECK,\r\n    payload: id,\r\n  }\r\n};\r\n\r\nexport const unCheckAllCategory = () => {\r\n  return {\r\n    type: CATEGORY_UNCHECK_ALL,\r\n  }\r\n};\r\n\r\nexport const unCheckCategory = (id) => {\r\n  return {\r\n    type: CATEGORY_UNCHECK,\r\n    payload: id,\r\n  }\r\n};\r\n\r\nexport const selectedQuestions = (questions) => {\r\n  return {\r\n    type: QUESTIONS_SELECTED,\r\n    payload: questions,\r\n  }\r\n};","export const CATEGORY_CHECK = 'CATEGORY_CHECK';\r\nexport const CATEGORY_UNCHECK = 'CATEGORY_UNCHECK';\r\nexport  const CATEGORY_UNCHECK_ALL = 'CATEGORY_UNCHECK_ALL';\r\nexport const QUESTIONS_SELECTED = 'QUESTIONS_SELECTED';","import React from \"react\";\r\nimport './Button.scss';\r\n\r\nconst Button = (props) => {\r\n  const { onClick, title, className, isDisabled } = props;\r\n  console.log(isDisabled)\r\n\r\n  return (\r\n    <button className={className} onClick={onClick} disabled={isDisabled}>{title}</button>\r\n  )\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport './Answer.scss';\r\n\r\nconst Answer = (props) => {\r\n  const {question} = props;\r\n\r\n  const getQuestion = () => {\r\n    const answerType = typeof question.answer;\r\n\r\n    switch (answerType) {\r\n      case 'string':\r\n        return question.answer;\r\n      case 'object' :\r\n        return (typeof question.answer[0] === \"object\")\r\n          ? <table><tbody>{getAnswerTable()}</tbody></table>\r\n          : <ul>{getAnswerBlock()}</ul>;\r\n      default:\r\n        console.log(question.answer);\r\n    }\r\n  };\r\n\r\n  const getAnswerBlock = () => question.answer.map((point, index) => {\r\n    return <li key={index}>{point}</li>\r\n  });\r\n\r\n  const getAnswerTable = () => question.answer.map((point, index) => {\r\n    return <tr key={index}><td>{point.value}</td><td>{point.explan}</td></tr>\r\n  });\r\n\r\n  const getLinks = () => {\r\n    if (question.links) {\r\n      return question.links.map((link, index) => <li key={index}><a href={link}>{link}</a></li>)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"answer-block\">\r\n      <div id=\"answerText\" className=\"answer-block__text text\">{getQuestion()}</div>\r\n      <h2 className='title title'>Ссылки</h2>\r\n      <ul>{getLinks()}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;","import React, {useState} from \"react\";\r\nimport './Question.scss';\r\nimport Button from \"../Button/Button\";\r\nimport Answer from \"../Answer/Answer\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Question = (props) => {\r\n  const { questions, setQuestionsOver } = props;\r\n  const [usedQuestions, setUsedQuestions] = useState([]);\r\n  const [isShowQuestion, setShowQuestion] = useState(false);\r\n  const [isShowAnswer, setShowAnswer] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [isDisabledBtn, setDisabledBtn] = useState(false);\r\n  const [isShowAnswerBtn, setAnswerShowBtn] = useState(false);\r\n\r\n  const showRandomQuestion = () => {\r\n    setDisabledBtn(false);\r\n    setAnswerShowBtn(false);\r\n    setShowAnswer(false);\r\n\r\n    if (usedQuestions.length === questions.length) {\r\n      handleEndQuiz();\r\n      return;\r\n    }\r\n    setShowAnswer(false);\r\n\r\n    const randomIndex = Math.floor(Math.random() * Math.floor(questions.length));\r\n    if (!usedQuestions.includes(randomIndex) ) {\r\n      setUsedQuestions(prevState => ([\r\n        ...prevState,\r\n          randomIndex,\r\n      ]));\r\n      setCurrentQuestion(questions[randomIndex]);\r\n      setShowQuestion(true);\r\n\r\n    } else {\r\n      showRandomQuestion();\r\n    }\r\n  };\r\n\r\n  const handleEndQuiz = () => {\r\n    setQuestionsOver(true);\r\n  };\r\n\r\n  const handleShowAnswer = () => {\r\n    setShowAnswer(true);\r\n  };\r\n\r\n  const handleKnow = () => {\r\n    setAnswerShowBtn(true);\r\n    setDisabledBtn(true);\r\n  };\r\n\r\n  const handleNotKnow = () => {\r\n    setDisabledBtn(true);\r\n    handleShowAnswer();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='question-block'>\r\n        <div className=\"question-block__question question\">\r\n         <Button\r\n           title='RANDOM QUESTION'\r\n           className='button button--random'\r\n           onClick={showRandomQuestion}\r\n           disabled={isDisabledBtn}\r\n         />\r\n          {isShowQuestion &&\r\n          <div className=\"questions-text-block\">\r\n            <h2 id=\"questionTitle\" className='question__title title'>{currentQuestion.title}</h2>\r\n            <p id=\"questionText\" className=\"question__text text\">{currentQuestion.text}</p>\r\n            <div className='buttons-group'>\r\n              <button className='button button--correct' onClick={handleKnow} disabled={isDisabledBtn}>Это я знаю!</button>\r\n              <button className='button button--wrong' onClick={handleNotKnow} disabled={isDisabledBtn}>Не знаю &#9785;</button>\r\n              {isShowAnswerBtn && <button className='button button--answer' onClick={handleShowAnswer}>Молодец! Посмотри ответ, чтоб проверить себя</button>}\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n        {isShowAnswer && <Answer question={currentQuestion}/>}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Question;","import React from \"react\";\r\nimport './Popup.scss';\r\nconst Popup = (props) => {\r\n  const {onSubmit, onCancel, setShowPopup} = props;\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false)\r\n  };\r\n\r\n  return (\r\n    <div className='wrap-popup '>\r\n      <div className='popup'>\r\n        <p className='popup-title'>Выбрать новые категории?</p>\r\n        <div className='btn-group' onClick={handleClosePopup}>\r\n          <button className='popup-btn button' onClick={onCancel}>ДА</button>\r\n          <button className='popup-btn button' onClick={onSubmit}>НЕТ</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Popup;","import React, {useEffect, useState} from 'react';\nimport Categories from \"./components/Caregories/Categories\";\nimport Question from \"./components/Question/Question\";\nimport Button from \"./components/Button/Button\";\nimport Popup from \"./components/Popup/Popup\";\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {unCheckAllCategory} from \"./store/actions\";\n\nconst App = () => {\n  const dataBase = useSelector(state => state.dataBase);\n  const categories = useSelector(state => state.categories);\n  const dispatch = useDispatch();\n\n  const [isStartClicked, setStartClicked] = useState(false);\n  const [isShowPopup, setShowPopup] = useState(false);\n  const [isQuestionsOver, setQuestionsOver] = useState(false);\n  const [isDisabled, setDisabled] = useState(true);\n\n  const startLearning = () => {\n    setStartClicked(true);\n  };\n\n  const againLearning = () => {\n    setShowPopup(true);\n  };\n\n  const getQuestions = () => {\n    let array = [];\n    const checkedCategories = categories.filter(category => category.checked === true);\n    checkedCategories.forEach(category => {\n      dataBase.forEach(questionsCategory => {\n        if (questionsCategory.category === category.value.toLowerCase()) {\n          array = array.concat(questionsCategory.questions);\n        }\n      });\n    });\n    return array;\n  };\n\n  const handleSubmit = () => {\n    setStartClicked(false);\n    setQuestionsOver(false);\n  };\n\n  const handleCancel = () => {\n    dispatch(unCheckAllCategory());\n    setStartClicked(false);\n    setQuestionsOver(false);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <Categories setDisabled={setDisabled}/>\n      {isQuestionsOver && <p className='title__warning'>ВЫ ОТВЕТИЛИ НА ВСЕ ВОПРОСЫ</p>}\n      <Button\n        onClick={isQuestionsOver ? againLearning : startLearning}\n        title={isQuestionsOver ? 'TRAIN AGAIN' : 'START'}\n        className='button button--start'\n        isDisabled={isDisabled}\n      />\n      {isStartClicked &&\n        <Question questions={getQuestions()} setQuestionsOver={setQuestionsOver}/>\n      }\n      {isShowPopup &&\n      <Popup setShowPopup={setShowPopup} onSubmit={handleSubmit} onCancel={handleCancel}/>}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {CATEGORY_CHECK, CATEGORY_UNCHECK, CATEGORY_UNCHECK_ALL} from \"./types\";\r\n\r\nconst initialCategoryState = [\r\n  {\r\n    value: 'HTML',\r\n    checked: false,\r\n    id: 1,\r\n  },\r\n  {\r\n    value: 'CSS',\r\n    checked: false,\r\n    id: 2,\r\n  },\r\n  {\r\n    value: 'JAVASCRIPT',\r\n    checked: false,\r\n    id: 3,\r\n  },\r\n  {\r\n    value: 'REACT',\r\n    checked: false,\r\n    id: 4,\r\n  },\r\n  {\r\n    value: 'REDUX',\r\n    checked: false,\r\n    id: 5,\r\n  },\r\n  {\r\n    value: 'ALL',\r\n    checked: false,\r\n    id: 6,\r\n  }\r\n];\r\nconst initialQuestionBase = [\r\n  //JS\r\n  //Обработка событий\r\n  //Циклы\r\n  //DOM\r\n  {\r\n    category: 'javascript',\r\n    questions: [\r\n      {\r\n        title: 'DOM',\r\n        text: 'Какие параменты принимает insertAdjacentHTML',\r\n        answer: [\r\n          'position',\r\n          'text',\r\n        ]\r\n      },\r\n      {\r\n        title: 'DOM',\r\n        text: 'Назовите значения параметра <i>position</i> у insertAdjacentHTML',\r\n        answer: [\r\n          'beforebegin: до самого element (до открывающего тега)',\r\n          'afterbegin: сразу после открывающего тега  element (перед первым потомком)',\r\n          'beforeend: сразу перед закрывающим тегом element (после последнего потомка)',\r\n          'afterend: после element (после закрывающего тега)',\r\n        ]\r\n      },\r\n      {\r\n        title: 'DOM',\r\n        text: 'Какие опционные свойства есть у метода addEventListener?',\r\n        answer: [\r\n          'once: если true, тогда обработчик будет автоматически удалён после выполнения',\r\n          'capture: фаза, на которой должен сработать обработчик, подробнее об этом будет рассказано в главе Всплытие и погружение.',\r\n          'passive: если true, то указывает, что обработчик никогда не вызовет preventDefault()',\r\n        ]\r\n      },\r\n      {\r\n        title: 'Циклы',\r\n        text: 'Для его используются циклы?',\r\n        answer: [\r\n          'Побочные эффекты',\r\n          'Трансформация',\r\n          'Фильтры',\r\n          'Комбинирование элементов',\r\n          'и т. д.',\r\n        ],\r\n        links: [\r\n          'https://webdevblog.ru/vvedenie-v-funkcionalnoe-programmirovanie-na-javascript/',\r\n        ]\r\n      },\r\n      //Объекты\r\n      {\r\n        title: 'Объекты',\r\n        text: 'Как можно ограничить возможность изменения объекта?',\r\n        answer: 'Object.freeze()',\r\n        links: [],\r\n      },\r\n      //Замыкание\r\n      {\r\n        title: 'Замыкание',\r\n        text: 'Что такое замыкание?',\r\n        answer: [\r\n          'Замыкание — это комбинация функции и лексического окружения, в котором эта функция была определена. Другими словами, замыкание дает вам доступ к Scope внешней функции из внутренней функции. В JavaScript замыкания создаются каждый раз при созданиии функции, во время ее создания.',\r\n          'Простыми словами: Замыкание - это функция внутри другой функции',\r\n        ],\r\n        links: [\r\n          'https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures#:~:text=%D0%97%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D0%B5%20%E2%80%94%20%D1%8D%D1%82%D0%BE%20%D0%BA%D0%BE%D0%BC%D0%B1%D0%B8%D0%BD%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%B8,%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%2C%20%D0%B2%D0%BE%20%D0%B2%D1%80%D0%B5%D0%BC%D1%8F%20%D0%B5%D0%B5%20%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F.',\r\n        ],\r\n      },\r\n      //Асинхронность\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Что такое SetTimeout?',\r\n        answer: 'Функция браузера (браузерный API). Не входит в спецификацию JS. Вызывается у глобального объекта window. Принимает два парамента: функцию и время, через которое вызовится эта функция в милисекундах',\r\n        links: [\r\n          '',\r\n        ],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Что такое Main Thread?',\r\n        answer:\r\n          'Main Thread — это основной поток, где браузер выполняет JS, делает перерисовки, обрабатывает пользовательские действия и многое другое.' +\r\n          'По сути, это то место, где движок JS интегрирован в браузер.',\r\n        links: ['https://habr.com/ru/post/461401/'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Что такое EventLoop?',\r\n        answer: 'Поток выполнения задач в браузере',\r\n        links: ['https://learn.javascript.ru/event-loop'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Как работает EventLoop',\r\n        answer:\r\n          'Когда интерпретатор проходит по коду и натыкается на асинхронную операцию, он закидывает ее в браузерный сторонний API,' +\r\n          'где она ждет указаное количество времени (есть мы говорим про SetTimeout)' +\r\n          '/ вызова (если это слушатели событий)' +\r\n          '/ выполение остальных операций интерпретатором (пример Promise).' +\r\n          'После операция попадает в очередь событий (Callback Queue).' +\r\n          'Как только интерпретатор выполнит все указаные действия в коде, события из очереди событий по очереди попадают в call stack',\r\n        links: [''],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Что такое Promise?',\r\n        answer:\r\n          'Promise – это специальный объект, который содержит своё состояние.' +\r\n          'Вначале pending («ожидание»), затем – одно из: fulfilled («выполнено успешно») или rejected («выполнено с ошибкой»).',\r\n        links: ['https://learn.javascript.ru/promise'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Что такое Промисификация?',\r\n        answer: 'Промисификация – это когда берут асинхронную функциональность и делают для неё обёртку, возвращающую промис.',\r\n        links: ['https://learn.javascript.ru/promise'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Какую проблему решает Promise?',\r\n        answer: 'Просимы были введены для избежания CallbackHellа, который подразумевал под собой создания большого количества вложеностей,' +\r\n          'что приводило к усложнению читабельности кода и трудностям в поддержании данного кода',\r\n        links: [''],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Назвать внутренние свойства объекта new Promise()?',\r\n        answer: [\r\n          'PromiseState – состояние, вначале «pending».',\r\n          'PromiseResult – результат, при создании значения нет.',\r\n          'PromiseFulfillReactions – список функций-обработчиков успешного выполнения.',\r\n          'PromiseRejectReactions – список функций-обработчиков ошибки.'\r\n        ],\r\n        links: ['https://learn.javascript.ru/promise'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Назвать методы для навешивания обработчиков в Promise',\r\n        answer: [\r\n          'then - навешивает обработчики на успешный результат или ошибку есть была вызвана функция resolve / reject',\r\n          'catch – используется для отлавливания ошибок',\r\n          'finally – выполняется независимо от успеха или ошибки при выполения промиса',\r\n        ],\r\n        links: ['https://learn.javascript.ru/promise'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Назвать статические методы Promise',\r\n        answer: [\r\n          'Promise.all(iterable) - Вызов Promise.all(iterable) получает массив (или другой итерируемый объект) промисов и возвращает промис,' +\r\n          'который ждёт, пока все переданные промисы завершатся, и переходит в состояние «выполнено» с массивом их результатов.',\r\n          'Promise.race(iterable) – получает итерируемый объект с промисами, которые нужно выполнить, и возвращает новый промис.' +\r\n          'Но, в отличие от Promise.all, результатом будет только первый успешно выполнившийся промис из списка. Остальные игнорируются.',\r\n          'Promise.resolve(value) – Вызов Promise.resolve(value) создаёт успешно выполнившийся промис с результатом value.',\r\n          'Promise.reject(error) – Вызов Promise.reject(error) создаёт уже выполнившийся промис, но не с успешным результатом, а с ошибкой error.',\r\n        ],\r\n        links: ['https://learn.javascript.ru/promise'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Что такое fetch?',\r\n        answer:\r\n          'Fetch - новый встроенный метод для AJAX-запросов, призванный заменить XMLHttpRequest. Он гораздо мощнее, чем httpGet.' +\r\n          'Этот метод использует промисы.',\r\n        links: ['https://learn.javascript.ru/promise'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Что такое Чейнинг?',\r\n        answer:\r\n          '«Чейнинг» (chaining) - возможность строить асинхронные цепочки из промисов – пожалуй,' +\r\n          'основная причина, из-за которой существуют и активно используются промисы.' +\r\n          'Используется для передачи результата от одного обработчика к другому',\r\n        links: ['https://learn.javascript.ru/promise'],\r\n      },\r\n      {\r\n        title: 'Асинхронность',\r\n        text: 'Как работает Async Await?',\r\n        answer:\r\n          'Cпециальный синтаксис для работы с промисами. По сути, это - синтаксический сахар, который позволяет более комфортно работать с промисами. ' +\r\n          'Начнём с ключевого слова async. Оно ставится перед функцией.' +\r\n          'У слова async один простой смысл: эта функция всегда возвращает промис.' +\r\n          'Ключевое слово await заставит интерпретатор JavaScript ждать до тех пор, пока промис справа от await не выполнится.' +\r\n          'После чего оно вернёт его результат, и выполнение кода продолжится.' +\r\n          'Если мы попробуем использовать await внутри функции, объявленной без async, получим синтаксическую ошибку.' +\r\n          'Результат выполнения промиса справа от await можно записать в переменную',\r\n        links: ['https://learn.javascript.ru/async-await'],\r\n      },\r\n      // Запросы на сервер\r\n      {\r\n        title: 'Асинхронность. Запросы на сервер',\r\n        text: 'Назовите способы создания запросов на сервер',\r\n        answer: ['XHR (XMLHttpRequest)', 'fetch'],\r\n        links: [''],\r\n      },\r\n      {\r\n        title: 'Асинхронность. Запросы на сервер',\r\n        text: 'Что такое AJAX?',\r\n        answer:\r\n          'Ajax означает Асинхронный JavaScript и XML. В основе технологии лежит использование нестандартного объекта XMLHttpRequest,' +\r\n          'необходимого для взаимодействия со скриптами на стороне сервера. Объект может как отправлять, так и получать информацию в различных форматах' +\r\n          'включая XML, HTML и даже текстовые файлы. Самое привлекательное в Ajax — это его асинхронный принцип работы.' +\r\n          'С помощью этой технологии можно осуществлять взаимодействие с сервером без необходимости перезагрузки страницы.' +\r\n          'Это позволяет обновлять содержимое страницы частично, в зависимости от действий пользователя.',\r\n        links: ['https://developer.mozilla.org/ru/docs/Web/Guide/AJAX/%D0%A1_%D1%87%D0%B5%D0%B3%D0%BE_%D0%BD%D0%B0%D1%87%D0%B0%D1%82%D1%8C'],\r\n      },\r\n      {\r\n        title: 'Асинхронность. Запросы на сервер',\r\n        text: 'Как работать с XHR?',\r\n        answer: [\r\n          'const xhr = new XMLHttpRequest()',\r\n          'xhr.open(метод, url)',\r\n          'xhr.responseType = \"js\"',\r\n          'xhr.setRequestHeader(name, value) - для POST запросов',\r\n          'xhr.onload = () => xhr.response (можно работать с результатами запроса)',\r\n          'xhr.onerror = () => xhr.response (действия при ошибке)',\r\n          'xhr.send() - при GET запросах',\r\n          'xhr.send(JSON.stringify(body)) - при POST запросах, body - информация для создания данных'\r\n        ],\r\n        links: [''],\r\n      },\r\n      {\r\n        title: 'Асинхронность. Запросы на сервер',\r\n        text: 'Как работать с fetch?',\r\n        answer: [\r\n          'GET:',\r\n          'fetch(url) -  по умолчания выполняется метод GET',\r\n          ' .then(response => response.json())',\r\n          ' ',\r\n          'POST:',\r\n          'fetch(url, {method, body = {}, headers = {name: value}})',\r\n        ],\r\n        links: [''],\r\n      },\r\n      {\r\n        title: 'Асинхронность. Запросы на сервер',\r\n        text: 'Назвать методы XHR запросов',\r\n        answer: [\r\n          'get() - получение данных',\r\n          'post() - для создания данных',\r\n          'delete() - для удаления данных',\r\n          'put() - для полного обновления элемента',\r\n          'patch() - для частичного обновления элемента'\r\n        ],\r\n        links: [''],\r\n      },\r\n      //Функциональное программирование\r\n      {\r\n        title: 'Функционалльное программирование',\r\n        text: 'Что такое композиция функций?',\r\n        answer: 'Композиция это техника, позволяющая вам взять две или больше простых функций и объединить их в одну, более сложную функцию, выполняющую подфункции в логическом порядке с любыми данными',\r\n        links: [\r\n          'http://prgssr.ru/development/kompoziciya-funkcij.html',\r\n        ],\r\n      },\r\n      {\r\n        title: 'Функционалльное программирование',\r\n        text: 'Что такое каррирование?',\r\n        answer: 'Каррирование – это процесс получения функции, которая принимает n аргументов, и превращения ее в n функций, каждая из которых принимает один аргумент.',\r\n        links: [],\r\n      },\r\n      {\r\n        title: 'Функциональное программирование',\r\n        text: 'Дать определение функции высшего порядка',\r\n        answer: '<b>Функция высшего порядка</b> - это функция, которая возвращает функцию или принимает другую функцию в качестве параметра. Самым явным примером функции высшего порядка является <b>addEventListener</b>',\r\n        links: [\r\n          'https://habr.com/ru/post/154105/'\r\n        ]\r\n      },\r\n      {\r\n        title: 'Функциональное программирование',\r\n        text: 'Назовите примеры побочных эффектов',\r\n        answer: [\r\n          'Видоизменение входных параметров',\r\n          'console.log',\r\n          'HTTP вызовы (AJAX/fetch)',\r\n          'Изменение в файловой системе',\r\n          'Запросы DOM',\r\n        ],\r\n        links: [\r\n          'https://habr.com/ru/post/437512/'\r\n        ]\r\n      },\r\n      {\r\n        title: 'Функциональное программирование',\r\n        text: 'Что такое чистая функция?',\r\n        answer: 'Чистая функция - \"строительный блок\" функционального програмирования, которая каждый раз возвращает одинаковый результат, когда она вызывается с тем же набором аргументов и не вызывает побочных эффектов. Из преимуществ можно выделить простоту в понимании и тестировании.',\r\n        links: [\r\n          'https://habr.com/ru/post/437512/'\r\n        ]\r\n      },\r\n      {\r\n        title: 'Функциональное программирование',\r\n        text: 'Назвать принципы функционального программирования',\r\n        answer: [\r\n          'Использование чистых функций',\r\n          'Копирование, а не переопределение переменных',\r\n          'Для объявления переменных использовать только CONST'\r\n        ],\r\n        links: [\r\n          'https://habr.com/ru/post/154105/',\r\n          'https://webdevblog.ru/vvedenie-v-funkcionalnoe-programmirovanie-na-javascript/',\r\n        ]\r\n      },\r\n      //Методы массивов\r\n      {\r\n        title: 'Методы массивов',\r\n        text: 'Назвать известные методы массивов',\r\n        answer: '',\r\n        links: [\r\n          'https://habr.com/ru/company/ruvds/blog/413169/',\r\n        ]\r\n      },\r\n      //Контект\r\n      {\r\n        title: 'Контект',\r\n        text: 'Что такое контекст?',\r\n        answer: 'Контекст выполнения функции — это одно из фундаментальных понятий в JavaScript. Контекстом еще часто называют значение переменной this внутри функции',\r\n        links: ['https://proweb63.ru/help/js/kontekst-vyipolneniya-funkczii-v-javascript#:~:text=%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%BA%D1%81%D1%82%20%D0%B2%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%E2%80%94%20%D1%8D%D1%82%D0%BE%20%D0%BE%D0%B4%D0%BD%D0%BE,%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9%20this%20%D0%B2%D0%BD%D1%83%D1%82%D1%80%D0%B8%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8.&text=%D0%9E%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D1%8C%20%D0%B2%D0%B8%D0%B4%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B8%20%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F%D0%B5%D1%82%20%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%20%D0%BA,%D1%8F%D0%B2%D0%BB%D1%8F%D0%B5%D1%82%D1%81%D1%8F%20%D1%83%D0%BD%D0%B8%D0%BA%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9%20%D0%B4%D0%BB%D1%8F%20%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%B3%D0%BE%20%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2%D0%B0.'],\r\n      },\r\n      {\r\n        title: 'Контект',\r\n        text: 'Назвать методы работы с контектстом',\r\n        answer: 'BIND, CALL, APPLY',\r\n        links: [''],\r\n      },\r\n      {\r\n        title: 'Контект',\r\n        text: 'Какая разница между BIND, CALL, APPLY',\r\n        answer: [\r\n          'BIND - привязывает контект, но не вызывает функцию',\r\n          'CALL - привязывает контект и сразу вызывает функцию с этим контекстом',\r\n          'APPLY - требует указания двух параментов(контект и параменты для новосозданой функции) и сразу вызывает функцию'],\r\n        links: [''],\r\n      },\r\n      // ООП\r\n      {\r\n        title: 'Принципы ООП',\r\n        text: 'Назвать принципы ООП',\r\n        answer: [\r\n          'Абстракция',\r\n          'Инкапсуляция',\r\n          'Наследование',\r\n          'Полиморфизм'\r\n        ],\r\n      },\r\n      {\r\n        title: 'Принципы ООП',\r\n        text: 'Объяснить принцип Инкапсуляции',\r\n        answer: 'Инкапсуляция — это контроль доступа к полям и методам объекта. Под контролем доступа подразумевается не только можно/неможно, но и различные валидации, подгрузки, вычисления и прочее динамическое поведение.',\r\n        links: ['https://habr.com/ru/post/463125/'],\r\n      },\r\n      {\r\n        title: 'Принципы ООП',\r\n        text: 'Объяснить принцип Наследования',\r\n        answer: 'Наследование — это механизм системы, который позволяет, как бы парадоксально это не звучало, наследовать одними классами свойства и поведение других классов для дальнейшего расширения или модификации',\r\n        links: ['https://habr.com/ru/post/463125/'],\r\n      },\r\n      {\r\n        title: 'Принципы ООП',\r\n        text: 'Объяснить принцип Полиморфизма',\r\n        answer: 'Полиморфизм — способность метода работать с разными данным. При работе с одним и тем же методом (функцией) разные сущности по-разному могут его использовать. Возможность применения в данном контексте свойств и методов, но внутри эти методы меняются для каждой сущности. Реализация задач одной и той же идеи разными способами',\r\n        links: ['https://habr.com/ru/post/463125/'],\r\n      },\r\n      {\r\n        title: 'Принципы ООП',\r\n        text: 'Объяснить принцип Абстракции',\r\n        answer: 'Абстракция – построение (разработка) модели, оставляем только важные параметры (свойства, методы). (На этапе разработки документации кода это особенно важно).',\r\n        links: ['https://habr.com/ru/post/463125/'],\r\n      },\r\n      {\r\n        title: 'ООП',\r\n        text: 'Объяснить, что такое ООП',\r\n        answer: 'Объектно-ориентированное программирование (в дальнейшем ООП) — парадигма программирования, в которой основными концепциями являются понятия объектов и классов.В центре ООП находится понятие объекта.',\r\n        links: [\r\n          'https://devcolibri.com/%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%BE%D0%BE%D0%BF-%D0%B8-%D1%81-%D1%87%D0%B5%D0%BC-%D0%B5%D0%B3%D0%BE-%D0%B5%D0%B4%D1%8F%D1%82/',\r\n          'https://habr.com/ru/post/463125/',\r\n        ]\r\n      },\r\n    ],\r\n  },\r\n  //Паттерны програмирования\r\n  //Функции\r\n  //Классы\r\n  //Прототипы\r\n  //СSS\r\n  {\r\n    category: 'css',\r\n    questions: [\r\n      {\r\n        title: 'Блочная модель',\r\n        text: 'Что под собой подразумевает блочная модель?',\r\n        answer: 'Блочная модель CSS — одна из основ веб-дизайна, которая в дальнейшем помогает лучше кастомизировать страницы. В соответствии с концепцией блочной модели, каждый элемент на странице представляет собой прямоугольный блок и может иметь ширину, высоту, поля, границы и отступы. Это стоит повторить: Каждый элемент на странице представляет собой прямоугольный блок.',\r\n        links: [\r\n          'https://html5book.ru/css-blochnaya-model/',\r\n          'https://developer.mozilla.org/ru/docs/Web/CSS/box_model',\r\n          'https://webref.ru/layout/learn-html-css/box-model'\r\n        ]\r\n      },\r\n      {\r\n        title: 'Вес селекторов',\r\n        text: 'Назвать, чему равен вес селокторов',\r\n        answer: [\r\n          {\r\n            value: '1',\r\n            explan: 'селектор тега'\r\n          },\r\n          {\r\n            value: '10',\r\n            explan: 'Селектор класса'\r\n          },\r\n          {\r\n            value: '100',\r\n            explan: 'Серектор id'\r\n          },\r\n          {\r\n            value: '10',\r\n            explan: 'Селектор аттрибута'\r\n          },\r\n          {\r\n            value: '1000',\r\n            explan: 'Inline стили'\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        title: 'Селекторы',\r\n        text: 'Назвать, какие селекторы существуют',\r\n        answer: [\r\n          '*all',\r\n          '#id',\r\n          '.class',\r\n          'контекстный селектор (X Y - стили применятся только к Y, которые ВНУТРИ X)', 'селектор тега (X)',\r\n          'псевдоклассы',\r\n          'асевдоэлементы',\r\n          'соседний селектор (X + Y - стили применятся только к тем Y, которые следуют СРАЗУ за X)',\r\n          'прямой потомок (X > Y - стили применятся только к тем Y, которые являются первоуровневыми потомками X)',\r\n          'менее строкий Соседний селектор (X ~ Y - выберит ВСЕ Y, которые следуют за X)',\r\n          'селектор аттрибута (можно указать точное значение аттрибота, например ссылку или только часть через a[href*=`linkPart`], можно указать ^ - начало строки и $ - конец строки)',\r\n        ],\r\n        links: ['https://code.tutsplus.com/ru/tutorials/the-30-css-explans-you-must-memorize--net-16048']\r\n      },\r\n      {\r\n        title: 'Псевдоелементы',\r\n        text: 'Назвать известные псевдоэлементы',\r\n        answer: [\r\n          {\r\n            value: 'p::first-line',\r\n            explan: 'Выберем первую строку параграфа'\r\n          },\r\n          {\r\n            value: 'p::first-letter',\r\n            explan: 'Выберем первую букву параграфа'\r\n          },\r\n          {\r\n            value: '',\r\n            explan: ''\r\n          }\r\n        ],\r\n        links: [],\r\n      },\r\n      {\r\n        title: 'Псевдоклассы',\r\n        text: 'Назвать известные псевдоклассы',\r\n        answer: [\r\n          {\r\n            value: 'X:first-of-type',\r\n            explan: 'Выбирает первого наследника указанного типа'\r\n          },\r\n          {\r\n            value: 'X:only-of-type',\r\n            explan: 'Выберет дочерний элемент, только если он единственный у родителя.'\r\n          },\r\n          {\r\n            value: 'X:only-child',\r\n            explan: 'позволяет выбрать элемент, являющийся единственным наследником своего родителя',\r\n            example: '../images/only-child.jpg',\r\n          },\r\n          {\r\n            value: 'X:last-child',\r\n            explan: 'Выберет последний дочерний элемент.',\r\n          },\r\n          {\r\n            value: 'first-child',\r\n            explan: 'Выберет только первый дочерний элемент.',\r\n          },\r\n          {\r\n            value: 'X:nth-last-of-type(n)',\r\n            explan: 'Выберет тоько последний элемент указанного типа',\r\n          },\r\n          {\r\n            value: 'X:nth-of-type(n)',\r\n            explan: 'Выберет элемент указанного типа по номеру',\r\n          },\r\n          {\r\n            value: 'X:nth-last-child(n)',\r\n            explan: 'Выберет дочерний элемент с конца',\r\n          },\r\n          {\r\n            value: 'X:nth-child(n)',\r\n            explan: 'Выберет дочерний элемент по указаному порядковому номеру',\r\n          },\r\n          {\r\n            value: 'X:not(explan)',\r\n            explan: 'Отрицание',\r\n          },\r\n          {\r\n            value: 'X:hover',\r\n            explan: 'Псевдокласс пользовательского действия',\r\n          },\r\n          {\r\n            value: 'X:after',\r\n            explan: 'Позволяют сгенерировать контент после указанного элемента.',\r\n          },\r\n          {\r\n            value: 'X:before',\r\n            explan: 'Позволяют сгенерировать контент перед указанным элементом.',\r\n          },\r\n          {\r\n            value: 'X:checked',\r\n            explan: 'Выберет только отмеченные элементы пользовательского интерфейса.',\r\n          },\r\n          {\r\n            value: 'X:link',\r\n            explan: 'Для стилизации ссылок, на которые пользователь ещё не нажимал.',\r\n          },\r\n          {\r\n            value: 'X:visited',\r\n            explan: 'Для стилизации только тех ссылок, на которые пользователь нажал.',\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        title: 'Анимация CSS',\r\n        text: 'Как создавать анимацию?',\r\n        answer: [\r\n          'CSS transitions - позволяют сделать изменения CSS-свойств плавно и в течение некоторого времени.',\r\n          'CSS animations - позволяют делать более сложные анимации, нежели CSS transitions. Весь секрет в @keyframes.' +\r\n          'Правило @keyframes позволяет создавать анимацию с помощью набора ключевых кадров,' +\r\n          'то есть описывает состояние объекта в определенный момент времени.',\r\n          'Motion Path Module CSS - позволяет создавать движение объектов по контуру через специальное свойство motion-path.' +\r\n          'Раньше такую анимацию можно было сделать только с помощью SVG или сложных скриптов.'\r\n        ],\r\n        links: ['https://stfalcon.com/ru/blog/post/animation-css']\r\n      },\r\n      {\r\n        title: 'Анимация CSS',\r\n        text: 'Назвать свойства для работы с Motion Path Module CSS?',\r\n        answer: [\r\n          'motion-path — это свойство позволяет указать точки(координаты) по которым будет двигаться объект. Синтаксис такой же как у SVG-атрибута path.',\r\n          'motion-offset — это свойство приводит объект в движение от начальной точки до конечной.',\r\n          'motion-rotation — это свойство позволяет указать, какой стороной вперед будет двигаться объект.'\r\n        ],\r\n        links: ['https://stfalcon.com/ru/blog/post/animation-css']\r\n      },\r\n      {\r\n        title: 'Анимация CSS',\r\n        text: 'Назвать свойства для работы с CSS animations?',\r\n        answer: [\r\n          'animation-iteration-count — задаёт количество повторов анимации, значение по умолчанию 1.' +\r\n          'Значение infinite означает, что анимация будет проигрываться бесконечно.',\r\n          'animation-direction — задаёт направление анимации.',\r\n          'animation-play-state — данное свойство управляет остановкой и прогрыванием анимации.' +\r\n          'Есть два значения, running (анимация проигрывается, по умолчанию) и paused (останавливает анимацию).',\r\n          'animation-fill-mode — устанавливает, какие CSS-свойства будут приминены к объекту до или после анимации',\r\n          'animation-duration — задаёт значение продолжительности анимации, время можно указывать в секундах или миллисекундах.',\r\n          'animation-timing-function — временная функция, указывает точки ускорения и замедления за определенный период времени' +\r\n          'для контроля изменения скорости анимации.',\r\n          'animation-delay — задаёт задержку времени до начала анимации, можно указывать в секундах или миллисекундах.',\r\n        ],\r\n        links: ['https://stfalcon.com/ru/blog/post/animation-css']\r\n      },\r\n      {\r\n        title: 'Анимация CSS',\r\n        text: 'Назвать свойства для работы с CSS transitions?',\r\n        answer: [\r\n          'transition-property — указывает список свойств, которые будут анимироваться',\r\n          'transition-duration — задаёт значение продолжительности анимации, время можно указывать в секундах или миллисекундах.',\r\n          'transition-timing-function — временная функция, указывает точки ускорения и замедления за определенный период времени' +\r\n          'для контроля изменения скорости анимации.',\r\n          'transition-delay — задаёт задержку времени до начала анимации, можно указывать в секундах или миллисекундах.',\r\n          'transition — это общее свойство, которое позволяет перечислить первые четыре свойства в порядке: property, duration, timing-function, delay.'\r\n        ],\r\n        links: ['https://stfalcon.com/ru/blog/post/animation-css']\r\n      },\r\n    ],\r\n  },\r\n  //HTML\r\n  {\r\n    category: 'html',\r\n    questions: [\r\n      {\r\n        title: 'HTML5. Семантическая верстка',\r\n        text:'Назвать известные семантические теги',\r\n        answer: [\r\n          '<article> <b>article</b></b> - отпределяет независимый, самодостаточный контент',\r\n          '<aside> <b> aside</b> -  определяет некий контент, находящийся в стороне от контента, внутри которого он расположен (как боковой блок страницы, \"сайдбар\")',\r\n          '<figcaption> <b>figcaption</b> - добавление визуального пояснения к изображению.',\r\n          '<figure> <b>figure</b> - используется для группирования различных самодостаточных элементов</b> - иллюстраций, диаграмм, фотографий, листингов кода и т.д',\r\n          '<footer> <b>footer</b> - определение \"подвала\" документа или раздела',\r\n          '<header> <b>header</b> - определение заголовочной части документа или раздела (\"шапки\")',\r\n          '<main> <b>main</b> - определяет основной контент документа. На стронице может быть только один',\r\n          '<mark> <b>mark</b> - определяет маркированный/подсвеченный текст',\r\n          '<nav> <b>nav</b> - определяет набор ссылок навигации. Предназначен только для основного влока навигационных ссылок',\r\n          '<section> <b>section</b> - определяет раздел в документе',\r\n          '<time> <b>time</b> - определяет дату/время',\r\n          '<summary> <b>summary</b> - определяет видимый заголовок элемента <details>',\r\n          '<details> <b>details</b> - определяет дополнительную информацию, которую пользователь может открывать или закрывать',\r\n        ],\r\n        links: [\r\n          'https://msiter.ru/tutorials/html5/semantic_elements'\r\n        ]\r\n      },\r\n    ]\r\n  },\r\n  //REACT\r\n  {\r\n    category: 'REACT',\r\n    questions: [\r\n      //основы\r\n      {\r\n        title: 'Компоненты',\r\n        text: 'Какие компоненты встречаются в React?',\r\n        answer: 'Функциональные и классовые',\r\n        links: [\r\n          'https://ru.reactjs.org/docs/components-and-props.html',\r\n        ],\r\n      },\r\n      //события\r\n      {\r\n        title: 'События в REACT компоненте',\r\n        text: 'Как предотвратить слишком быстрый или слишком частый вызов функции?',\r\n        answer: [\r\n          'троттлинг: выборочные изменения, зависимые от частоты, основанной на времени (напр. _.throttle)',\r\n          'дебаунсинг: изменения, задействованные после некого периода бездействия (напр. _.debounce)',\r\n          'троттлинг с помощью requestAnimationFrame: выборочные изменения, основанные на requestAnimationFrame (напр. raf-schd)',\r\n        ],\r\n        links: [\r\n          'https://ru.reactjs.org/docs/faq-functions.html'\r\n        ]\r\n      },\r\n      //props, state\r\n      {\r\n        title: 'PROPS, STATE',\r\n        text: 'В чем разница между props и state?',\r\n        answer: 'Несмотря на то, что оба содержат информацию, которая влияет на то,' +\r\n          'что увидим после рендера, есть существенное различие: props передаётся в компонент (служат как параметры функции),' +\r\n          ' в то время как state находится внутри компонента (по аналогии с переменными, которые объявлены внутри функции). Также state можно переопределить, ' +\r\n          'в то время, как props переобпределять нельзя',\r\n        links: [\r\n          'https://ru.reactjs.org/docs/faq-state.html',\r\n        ]\r\n      },\r\n      {\r\n        title: 'STATE',\r\n        text: 'Можно ли изменять состояние компонента напрямую?',\r\n        answer: 'Нет. Для изменения состояния необходимо использовать setState, иначе не будет происходить ререндеринга',\r\n        links: [],\r\n      },\r\n      {\r\n        title: 'STATE',\r\n        text: 'Могут ли объявления состояний быть асинхронными?',\r\n        answer: 'Да. Таким образом react препятствует лишнему рендерингу компонентов.',\r\n        links: [\r\n          'https://ru.reactjs.org/docs/state-and-lifecycle.html'\r\n        ],\r\n      },\r\n      //хуки\r\n      {\r\n        title: 'React хуки',\r\n        text: 'Что такое Компонент высшего порядка?',\r\n        answer: 'компонент высшего порядка — это функция, которая принимает компонент и возвращает новый компонент.',\r\n        links: [\r\n          'https://ru.reactjs.org/docs/higher-order-components.html',\r\n        ],\r\n      },\r\n      {\r\n        title: 'React хуки',\r\n        text: 'Назвать известные вам React хуки',\r\n        answer: [\r\n          'useState (основной)',\r\n          'useEffect (основной)',\r\n          'useContext (основной)',\r\n          'useReducer (дополнительный)',\r\n          'useCallback (дополнительный)',\r\n          'useMemo (дополнительный)',\r\n          'useRef (дополнительный)',\r\n          'useImperativeHandle (дополнительный)',\r\n          'useLayoutEffect (дополнительный)',\r\n          'useDebugValue (дополнительный)',\r\n        ],\r\n        links: [\r\n          'https://ru.reactjs.org/docs/hooks-overview.html',\r\n        ]\r\n      },\r\n      {\r\n        title: 'React хуки',\r\n        text: 'Условия использования хуков',\r\n        answer: [\r\n          'Использовать хуки можно только в хункциональных компонентах',\r\n          'Использовать хуки можно только на верхних уровнях. Нельзя использовать хуки в циклах, внутри условий и вложеных функций',\r\n          'Хуки можно использовать внутри пользовательских хуков',\r\n        ],\r\n        links: [\r\n          'https://ru.reactjs.org/docs/hooks-overview.html',\r\n        ]\r\n      },\r\n      //Virtual DOM\r\n      {\r\n        title: 'Virtual DOM',\r\n        text: 'Что такое виртуальный DOM?',\r\n        answer: 'Виртуальный DOM (VDOM) — это концепция программирования, в которой идеальное или «виртуальное» представление' +\r\n          ' пользовательского интерфейса хранится в памяти и синхронизируется с «настоящим» DOM при помощи библиотеки, такой как ReactDOM.' +\r\n          ' Этот процесс называется согласованием.',\r\n        links: [\r\n          'https://ru.reactjs.org/docs/faq-internals.html',\r\n        ]\r\n      },\r\n      {\r\n        title: 'Virtual DOM',\r\n        text: 'Что такое «React Fiber»?',\r\n        answer: 'Fiber — новый механизм согласования в React 16, основная цель которого сделать рендеринг виртуального DOM инкрементным.',\r\n        links: [\r\n          'https://ru.reactjs.org/docs/faq-internals.html',\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\nconst initialSelectedQuestions = [];\r\n\r\nexport const categoryReducer = (state = initialCategoryState, action) => {\r\n  switch (action.type) {\r\n    case CATEGORY_CHECK:\r\n      return state.map(item => {\r\n        if (item.value.toLowerCase() === action.payload) {\r\n          item.checked = true;\r\n          return {...item}\r\n        }\r\n        return {...item}\r\n      });\r\n    case CATEGORY_UNCHECK:\r\n      return state.map(item => {\r\n        if (item.value.toLowerCase() === action.payload) {\r\n          item.checked = false;\r\n          return {...item}\r\n        }\r\n        return {...item}\r\n      });\r\n    case CATEGORY_UNCHECK_ALL:\r\n      return state.map(item => {\r\n        item.checked = false;\r\n        return {...item}\r\n      });\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport const dataBase = (state = initialQuestionBase, action) => {\r\n  return state;\r\n};\r\n\r\n// export const selectedQuestions = (state = initialSelectedQuestions, action) => {\r\n//   return action.payload;\r\n// };","import {combineReducers} from \"redux\";\r\nimport {categoryReducer, dataBase} from \"./reducers\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  categories: categoryReducer,\r\n  dataBase: dataBase,\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from \"redux\";\nimport {Provider} from 'react-redux';\nimport {rootReducer} from \"./store/rootReduser\";\n\nconst store = createStore(rootReducer);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}